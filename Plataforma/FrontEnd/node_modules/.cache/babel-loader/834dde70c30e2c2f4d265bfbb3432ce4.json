{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { mergeRefs, Tag, useClassNames, createComponent } from '@rmwc/base';\nimport { useDismissableDrawerFoundation, useModalDrawerFoundation } from './foundation';\n/** A Drawer component. */\n\nexport var Drawer = createComponent(function Drawer(props, ref) {\n  if (props.dismissible) {\n    return React.createElement(DismissibleDrawer, __assign({}, props, {\n      ref: ref\n    }));\n  }\n\n  if (props.modal) {\n    return React.createElement(ModalDrawer, __assign({}, props, {\n      ref: ref\n    }));\n  }\n\n  return React.createElement(DrawerRoot, __assign({}, props, {\n    ref: ref\n  }));\n});\n\nvar slidableDrawerFactory = function (useDrawerFoundation) {\n  var DrawerInner = createComponent(function DrawerInner(props, ref) {\n    var _a = useDrawerFoundation(props),\n        rootEl = _a.rootEl,\n        scrimEl = _a.scrimEl;\n\n    var onOpen = props.onOpen,\n        onClose = props.onClose,\n        open = props.open,\n        foundationRef = props.foundationRef,\n        rest = __rest(props, [\"onOpen\", \"onClose\", \"open\", \"foundationRef\"]);\n\n    return React.createElement(React.Fragment, null, React.createElement(DrawerRoot, __assign({\n      ref: mergeRefs(rootEl.setRef, ref)\n    }, rootEl.props(rest))), rest.modal && React.createElement(DrawerScrim, __assign({}, scrimEl.props({}))));\n  });\n  return DrawerInner;\n};\n\nvar ModalDrawer = slidableDrawerFactory(useModalDrawerFoundation);\nvar DismissibleDrawer = slidableDrawerFactory(useDismissableDrawerFoundation);\nvar DrawerRoot = createComponent(function DrawerRoot(props, ref) {\n  var dismissible = props.dismissible,\n      modal = props.modal,\n      foundationRef = props.foundationRef,\n      rest = __rest(props, [\"dismissible\", \"modal\", \"foundationRef\"]);\n\n  var className = useClassNames(props, ['mdc-drawer', {\n    'mdc-drawer--dismissible': dismissible,\n    'mdc-drawer--modal': modal\n  }]);\n  return React.createElement(Tag, __assign({\n    tag: \"aside\"\n  }, rest, {\n    ref: ref,\n    className: className\n  }));\n});\n/** An optional header for the Drawer. */\n\nexport var DrawerHeader = createComponent(function DrawerHeader(props, ref) {\n  var className = useClassNames(props, ['mdc-drawer__header']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** An title for the DrawerHeader. */\n\nexport var DrawerTitle = createComponent(function DrawerTitle(props, ref) {\n  var className = useClassNames(props, ['mdc-drawer__title']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** A subtitle for the DrawerHeader. */\n\nexport var DrawerSubtitle = createComponent(function DrawerSubtitle(props, ref) {\n  var className = useClassNames(props, ['mdc-drawer__subtitle']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Content for Drawers. */\n\nexport var DrawerContent = createComponent(function DrawerContent(props, ref) {\n  var className = useClassNames(props, ['mdc-drawer__content']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Protects the app's UI from interactions while a modal drawer is open. */\n\nvar DrawerScrim = function (_a) {\n  var onClick = _a.onClick;\n  return React.createElement(\"div\", {\n    className: \"mdc-drawer-scrim\",\n    onClick: onClick\n  });\n};\n/** For the Dismissible variant only. Sibling element that is resized when the drawer opens/closes. */\n\n\nexport var DrawerAppContent = createComponent(function DrawerAppContent(props, ref) {\n  var className = useClassNames(props, ['mdc-drawer-app-content']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});","map":{"version":3,"sources":["C:/Users/diego/OneDrive/Documents/GitHub/dbprouno/Plataforma/FrontEnd/node_modules/@rmwc/drawer/next/index.js"],"names":["__assign","__rest","React","mergeRefs","Tag","useClassNames","createComponent","useDismissableDrawerFoundation","useModalDrawerFoundation","Drawer","props","ref","dismissible","createElement","DismissibleDrawer","modal","ModalDrawer","DrawerRoot","slidableDrawerFactory","useDrawerFoundation","DrawerInner","_a","rootEl","scrimEl","onOpen","onClose","open","foundationRef","rest","Fragment","setRef","DrawerScrim","className","tag","DrawerHeader","DrawerTitle","DrawerSubtitle","DrawerContent","onClick","DrawerAppContent"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { mergeRefs, Tag, useClassNames, createComponent } from '@rmwc/base';\nimport { useDismissableDrawerFoundation, useModalDrawerFoundation } from './foundation';\n/** A Drawer component. */\nexport var Drawer = createComponent(function Drawer(props, ref) {\n    if (props.dismissible) {\n        return React.createElement(DismissibleDrawer, __assign({}, props, { ref: ref }));\n    }\n    if (props.modal) {\n        return React.createElement(ModalDrawer, __assign({}, props, { ref: ref }));\n    }\n    return React.createElement(DrawerRoot, __assign({}, props, { ref: ref }));\n});\nvar slidableDrawerFactory = function (useDrawerFoundation) {\n    var DrawerInner = createComponent(function DrawerInner(props, ref) {\n        var _a = useDrawerFoundation(props), rootEl = _a.rootEl, scrimEl = _a.scrimEl;\n        var onOpen = props.onOpen, onClose = props.onClose, open = props.open, foundationRef = props.foundationRef, rest = __rest(props, [\"onOpen\", \"onClose\", \"open\", \"foundationRef\"]);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(DrawerRoot, __assign({ ref: mergeRefs(rootEl.setRef, ref) }, rootEl.props(rest))),\n            rest.modal && React.createElement(DrawerScrim, __assign({}, scrimEl.props({})))));\n    });\n    return DrawerInner;\n};\nvar ModalDrawer = slidableDrawerFactory(useModalDrawerFoundation);\nvar DismissibleDrawer = slidableDrawerFactory(useDismissableDrawerFoundation);\nvar DrawerRoot = createComponent(function DrawerRoot(props, ref) {\n    var dismissible = props.dismissible, modal = props.modal, foundationRef = props.foundationRef, rest = __rest(props, [\"dismissible\", \"modal\", \"foundationRef\"]);\n    var className = useClassNames(props, [\n        'mdc-drawer',\n        {\n            'mdc-drawer--dismissible': dismissible,\n            'mdc-drawer--modal': modal\n        }\n    ]);\n    return React.createElement(Tag, __assign({ tag: \"aside\" }, rest, { ref: ref, className: className }));\n});\n/** An optional header for the Drawer. */\nexport var DrawerHeader = createComponent(function DrawerHeader(props, ref) {\n    var className = useClassNames(props, ['mdc-drawer__header']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** An title for the DrawerHeader. */\nexport var DrawerTitle = createComponent(function DrawerTitle(props, ref) {\n    var className = useClassNames(props, ['mdc-drawer__title']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** A subtitle for the DrawerHeader. */\nexport var DrawerSubtitle = createComponent(function DrawerSubtitle(props, ref) {\n    var className = useClassNames(props, ['mdc-drawer__subtitle']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** Content for Drawers. */\nexport var DrawerContent = createComponent(function DrawerContent(props, ref) {\n    var className = useClassNames(props, ['mdc-drawer__content']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** Protects the app's UI from interactions while a modal drawer is open. */\nvar DrawerScrim = function (_a) {\n    var onClick = _a.onClick;\n    return React.createElement(\"div\", { className: \"mdc-drawer-scrim\", onClick: onClick });\n};\n/** For the Dismissible variant only. Sibling element that is resized when the drawer opens/closes. */\nexport var DrawerAppContent = createComponent(function DrawerAppContent(props, ref) {\n    var className = useClassNames(props, ['mdc-drawer-app-content']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n"]},"metadata":{},"sourceType":"module"}