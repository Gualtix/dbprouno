{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2016 Google Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\nvar MDCFoundation =\n/** @class */\nfunction () {\n  function MDCFoundation(adapter) {\n    if (adapter === void 0) {\n      adapter = {};\n    }\n\n    this.adapter_ = adapter;\n  }\n\n  Object.defineProperty(MDCFoundation, \"cssClasses\", {\n    get: function () {\n      // Classes extending MDCFoundation should implement this method to return an object which exports every\n      // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCFoundation, \"strings\", {\n    get: function () {\n      // Classes extending MDCFoundation should implement this method to return an object which exports all\n      // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCFoundation, \"numbers\", {\n    get: function () {\n      // Classes extending MDCFoundation should implement this method to return an object which exports all\n      // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n    get: function () {\n      // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n      // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n      // validation.\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCFoundation.prototype.init = function () {// Subclasses should override this method to perform initialization routines (registering events, etc.)\n  };\n\n  MDCFoundation.prototype.destroy = function () {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  };\n\n  return MDCFoundation;\n}();\n\nexport { MDCFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;AAEH,IAAA,aAAA;AAAA;AAAA,YAAA;AA4BE,WAAA,aAAA,CAAY,OAAZ,EAAoD;AAAxC,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAuB,EAAvB;AAAwC;;AAClD,SAAK,QAAL,GAAgB,OAAhB;AACD;;AA7BD,EAAA,MAAA,CAAA,cAAA,CAAW,aAAX,EAAW,YAAX,EAAqB;SAArB,YAAA;AACE;AACA;AACA,aAAO,EAAP;AACD,KAJoB;oBAAA;;AAAA,GAArB;AAMA,EAAA,MAAA,CAAA,cAAA,CAAW,aAAX,EAAW,SAAX,EAAkB;SAAlB,YAAA;AACE;AACA;AACA,aAAO,EAAP;AACD,KAJiB;oBAAA;;AAAA,GAAlB;AAMA,EAAA,MAAA,CAAA,cAAA,CAAW,aAAX,EAAW,SAAX,EAAkB;SAAlB,YAAA;AACE;AACA;AACA,aAAO,EAAP;AACD,KAJiB;oBAAA;;AAAA,GAAlB;AAMA,EAAA,MAAA,CAAA,cAAA,CAAW,aAAX,EAAW,gBAAX,EAAyB;SAAzB,YAAA;AACE;AACA;AACA;AACA,aAAO,EAAP;AACD,KALwB;oBAAA;;AAAA,GAAzB;;AAaA,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA,CACE;AACD,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA,CACE;AACD,GAFD;;AAGF,SAAA,aAAA;AAAC,CAvCD,EAAA;;0BAyCA;;AACA,eAAe,aAAf","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2016 Google Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\nvar MDCFoundation = /** @class */ (function () {\r\n    function MDCFoundation(adapter) {\r\n        if (adapter === void 0) { adapter = {}; }\r\n        this.adapter_ = adapter;\r\n    }\r\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\r\n        get: function () {\r\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\r\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MDCFoundation, \"strings\", {\r\n        get: function () {\r\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\r\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MDCFoundation, \"numbers\", {\r\n        get: function () {\r\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\r\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\r\n        get: function () {\r\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\r\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\r\n            // validation.\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MDCFoundation.prototype.init = function () {\r\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\r\n    };\r\n    MDCFoundation.prototype.destroy = function () {\r\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\r\n    };\r\n    return MDCFoundation;\r\n}());\r\nexport { MDCFoundation };\r\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\r\nexport default MDCFoundation;\r\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}