{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2016 Google Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { applyPassive } from '@material/dom/events';\nimport { matches } from '@material/dom/ponyfill';\nimport { MDCRippleFoundation } from './foundation';\nimport * as util from './util';\n\nvar MDCRipple =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCRipple, _super);\n\n  function MDCRipple() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.disabled = false;\n    return _this;\n  }\n\n  MDCRipple.attachTo = function (root, opts) {\n    if (opts === void 0) {\n      opts = {\n        isUnbounded: undefined\n      };\n    }\n\n    var ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified\n\n    if (opts.isUnbounded !== undefined) {\n      ripple.unbounded = opts.isUnbounded;\n    }\n\n    return ripple;\n  };\n\n  MDCRipple.createAdapter = function (instance) {\n    return {\n      addClass: function (className) {\n        return instance.root_.classList.add(className);\n      },\n      browserSupportsCssVars: function () {\n        return util.supportsCssVariables(window);\n      },\n      computeBoundingRect: function () {\n        return instance.root_.getBoundingClientRect();\n      },\n      containsEventTarget: function (target) {\n        return instance.root_.contains(target);\n      },\n      deregisterDocumentInteractionHandler: function (evtType, handler) {\n        return document.documentElement.removeEventListener(evtType, handler, applyPassive());\n      },\n      deregisterInteractionHandler: function (evtType, handler) {\n        return instance.root_.removeEventListener(evtType, handler, applyPassive());\n      },\n      deregisterResizeHandler: function (handler) {\n        return window.removeEventListener('resize', handler);\n      },\n      getWindowPageOffset: function () {\n        return {\n          x: window.pageXOffset,\n          y: window.pageYOffset\n        };\n      },\n      isSurfaceActive: function () {\n        return matches(instance.root_, ':active');\n      },\n      isSurfaceDisabled: function () {\n        return Boolean(instance.disabled);\n      },\n      isUnbounded: function () {\n        return Boolean(instance.unbounded);\n      },\n      registerDocumentInteractionHandler: function (evtType, handler) {\n        return document.documentElement.addEventListener(evtType, handler, applyPassive());\n      },\n      registerInteractionHandler: function (evtType, handler) {\n        return instance.root_.addEventListener(evtType, handler, applyPassive());\n      },\n      registerResizeHandler: function (handler) {\n        return window.addEventListener('resize', handler);\n      },\n      removeClass: function (className) {\n        return instance.root_.classList.remove(className);\n      },\n      updateCssVariable: function (varName, value) {\n        return instance.root_.style.setProperty(varName, value);\n      }\n    };\n  };\n\n  Object.defineProperty(MDCRipple.prototype, \"unbounded\", {\n    get: function () {\n      return Boolean(this.unbounded_);\n    },\n    set: function (unbounded) {\n      this.unbounded_ = Boolean(unbounded);\n      this.setUnbounded_();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCRipple.prototype.activate = function () {\n    this.foundation_.activate();\n  };\n\n  MDCRipple.prototype.deactivate = function () {\n    this.foundation_.deactivate();\n  };\n\n  MDCRipple.prototype.layout = function () {\n    this.foundation_.layout();\n  };\n\n  MDCRipple.prototype.getDefaultFoundation = function () {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  };\n\n  MDCRipple.prototype.initialSyncWithDOM = function () {\n    var root = this.root_;\n    this.unbounded = 'mdcRippleIsUnbounded' in root.dataset;\n  };\n  /**\r\n   * Closure Compiler throws an access control error when directly accessing a\r\n   * protected or private property inside a getter/setter, like unbounded above.\r\n   * By accessing the protected property inside a method, we solve that problem.\r\n   * That's why this function exists.\r\n   */\n\n\n  MDCRipple.prototype.setUnbounded_ = function () {\n    this.foundation_.setUnbounded(Boolean(this.unbounded_));\n  };\n\n  return MDCRipple;\n}(MDCComponent);\n\nexport { MDCRipple };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAEH,SAAQ,YAAR,QAA2B,0BAA3B;AACA,SAAQ,YAAR,QAA2B,sBAA3B;AACA,SAAQ,OAAR,QAAsB,wBAAtB;AAEA,SAAQ,mBAAR,QAAkC,cAAlC;AAEA,OAAO,KAAK,IAAZ,MAAsB,QAAtB;;AAIA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,EAAA,MAAA;;AAA/B,WAAA,SAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAsCE,IAAA,KAAA,CAAA,QAAA,GAAW,KAAX;;AA2CD;;AAhFQ,EAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAA+B,IAA/B,EAAmF;AAApD,QAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,IAAA,GAAA;AAA6B,QAAA,WAAW,EAAE;AAA1C,OAAA;AAAoD;;AACjF,QAAM,MAAM,GAAG,IAAI,SAAJ,CAAc,IAAd,CAAf,CADiF,CAEjF;;AACA,QAAI,IAAI,CAAC,WAAL,KAAqB,SAAzB,EAAoC;AAClC,MAAA,MAAM,CAAC,SAAP,GAAmB,IAAI,CAAC,WAAxB;AACD;;AACD,WAAO,MAAP;AACD,GAPM;;AASA,EAAA,SAAA,CAAA,aAAA,GAAP,UAAqB,QAArB,EAAsD;AACpD,WAAO;AACL,MAAA,QAAQ,EAAE,UAAC,SAAD,EAAU;AAAK,eAAA,QAAQ,CAAC,KAAT,CAAe,SAAf,CAAyB,GAAzB,CAAA,SAAA,CAAA;AAAuC,OAD3D;AAEL,MAAA,sBAAsB,EAAE,YAAA;AAAM,eAAA,IAAI,CAAC,oBAAL,CAAA,MAAA,CAAA;AAAiC,OAF1D;AAGL,MAAA,mBAAmB,EAAE,YAAA;AAAM,eAAA,QAAQ,CAAC,KAAT,CAAA,qBAAA,EAAA;AAAsC,OAH5D;AAIL,MAAA,mBAAmB,EAAE,UAAC,MAAD,EAAO;AAAK,eAAA,QAAQ,CAAC,KAAT,CAAe,QAAf,CAAA,MAAA,CAAA;AAAuC,OAJnE;AAKL,MAAA,oCAAoC,EAAE,UAAC,OAAD,EAAU,OAAV,EAAiB;AACnD,eAAA,QAAQ,CAAC,eAAT,CAAyB,mBAAzB,CAA6C,OAA7C,EAAsD,OAAtD,EAA+D,YAAY,EAA3E,CAAA;AAA8E,OAN7E;AAOL,MAAA,4BAA4B,EAAE,UAAC,OAAD,EAAU,OAAV,EAAiB;AAC3C,eAAC,QAAQ,CAAC,KAAT,CAA+B,mBAA/B,CAAmD,OAAnD,EAA4D,OAA5D,EAAqE,YAAY,EAAjF,CAAD;AAAqF,OARpF;AASL,MAAA,uBAAuB,EAAE,UAAC,OAAD,EAAQ;AAAK,eAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAA,OAAA,CAAA;AAA6C,OAT9E;AAUL,MAAA,mBAAmB,EAAE,YAAA;AAAM,eAAC;AAAC,UAAA,CAAC,EAAE,MAAM,CAAC,WAAX;AAAwB,UAAA,CAAC,EAAE,MAAM,CAAlC;AAAC,SAAD;AAAgD,OAVtE;AAWL,MAAA,eAAe,EAAE,YAAA;AAAM,eAAA,OAAO,CAAC,QAAQ,CAAC,KAAV,EAAP,SAAO,CAAP;AAAkC,OAXpD;AAYL,MAAA,iBAAiB,EAAE,YAAA;AAAM,eAAA,OAAO,CAAC,QAAQ,CAAhB,QAAO,CAAP;AAA0B,OAZ9C;AAaL,MAAA,WAAW,EAAE,YAAA;AAAM,eAAA,OAAO,CAAC,QAAQ,CAAhB,SAAO,CAAP;AAA2B,OAbzC;AAcL,MAAA,kCAAkC,EAAE,UAAC,OAAD,EAAU,OAAV,EAAiB;AACjD,eAAA,QAAQ,CAAC,eAAT,CAAyB,gBAAzB,CAA0C,OAA1C,EAAmD,OAAnD,EAA4D,YAAY,EAAxE,CAAA;AAA2E,OAf1E;AAgBL,MAAA,0BAA0B,EAAE,UAAC,OAAD,EAAU,OAAV,EAAiB;AAC3C,eAAC,QAAQ,CAAC,KAAT,CAA+B,gBAA/B,CAAgD,OAAhD,EAAyD,OAAzD,EAAkE,YAAY,EAA9E,CAAD;AAAkF,OAjB/E;AAkBL,MAAA,qBAAqB,EAAE,UAAC,OAAD,EAAQ;AAAK,eAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAA,OAAA,CAAA;AAA0C,OAlBzE;AAmBL,MAAA,WAAW,EAAE,UAAC,SAAD,EAAU;AAAK,eAAA,QAAQ,CAAC,KAAT,CAAe,SAAf,CAAyB,MAAzB,CAAA,SAAA,CAAA;AAA0C,OAnBjE;AAoBL,MAAA,iBAAiB,EAAE,UAAC,OAAD,EAAU,KAAV,EAAe;AAAK,eAAC,QAAQ,CAAC,KAAT,CAA+B,KAA/B,CAAqC,WAArC,CAAiD,OAAjD,EAAD,KAAC,CAAD;AAAiE;AApBnG,KAAP;AAsBD,GAvBM;;AAgCP,EAAA,MAAA,CAAA,cAAA,CAAI,SAAA,CAAA,SAAJ,EAAI,WAAJ,EAAa;SAAb,YAAA;AACE,aAAO,OAAO,CAAC,KAAK,UAAN,CAAd;AACD,KAFY;SAIb,UAAc,SAAd,EAAgC;AAC9B,WAAK,UAAL,GAAkB,OAAO,CAAC,SAAD,CAAzB;AACA,WAAK,aAAL;AACD,KAPY;oBAAA;;AAAA,GAAb;;AASA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,SAAK,WAAL,CAAiB,QAAjB;AACD,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,SAAK,WAAL,CAAiB,UAAjB;AACD,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,SAAK,WAAL,CAAiB,MAAjB;AACD,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AACE,WAAO,IAAI,mBAAJ,CAAwB,SAAS,CAAC,aAAV,CAAwB,IAAxB,CAAxB,CAAP;AACD,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACE,QAAM,IAAI,GAAG,KAAK,KAAlB;AACA,SAAK,SAAL,GAAiB,0BAA0B,IAAI,CAAC,OAAhD;AACD,GAHD;AAKA;;;;;AAKG;;;AACK,EAAA,SAAA,CAAA,SAAA,CAAA,aAAA,GAAR,YAAA;AACE,SAAK,WAAL,CAAiB,YAAjB,CAA8B,OAAO,CAAC,KAAK,UAAN,CAArC;AACD,GAFO;;AAGV,SAAA,SAAA;AAAC,CAjFD,CAA+B,YAA/B,CAAA","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2016 Google Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MDCComponent } from '@material/base/component';\r\nimport { applyPassive } from '@material/dom/events';\r\nimport { matches } from '@material/dom/ponyfill';\r\nimport { MDCRippleFoundation } from './foundation';\r\nimport * as util from './util';\r\nvar MDCRipple = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MDCRipple, _super);\r\n    function MDCRipple() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.disabled = false;\r\n        return _this;\r\n    }\r\n    MDCRipple.attachTo = function (root, opts) {\r\n        if (opts === void 0) { opts = { isUnbounded: undefined }; }\r\n        var ripple = new MDCRipple(root);\r\n        // Only override unbounded behavior if option is explicitly specified\r\n        if (opts.isUnbounded !== undefined) {\r\n            ripple.unbounded = opts.isUnbounded;\r\n        }\r\n        return ripple;\r\n    };\r\n    MDCRipple.createAdapter = function (instance) {\r\n        return {\r\n            addClass: function (className) { return instance.root_.classList.add(className); },\r\n            browserSupportsCssVars: function () { return util.supportsCssVariables(window); },\r\n            computeBoundingRect: function () { return instance.root_.getBoundingClientRect(); },\r\n            containsEventTarget: function (target) { return instance.root_.contains(target); },\r\n            deregisterDocumentInteractionHandler: function (evtType, handler) {\r\n                return document.documentElement.removeEventListener(evtType, handler, applyPassive());\r\n            },\r\n            deregisterInteractionHandler: function (evtType, handler) {\r\n                return instance.root_.removeEventListener(evtType, handler, applyPassive());\r\n            },\r\n            deregisterResizeHandler: function (handler) { return window.removeEventListener('resize', handler); },\r\n            getWindowPageOffset: function () { return ({ x: window.pageXOffset, y: window.pageYOffset }); },\r\n            isSurfaceActive: function () { return matches(instance.root_, ':active'); },\r\n            isSurfaceDisabled: function () { return Boolean(instance.disabled); },\r\n            isUnbounded: function () { return Boolean(instance.unbounded); },\r\n            registerDocumentInteractionHandler: function (evtType, handler) {\r\n                return document.documentElement.addEventListener(evtType, handler, applyPassive());\r\n            },\r\n            registerInteractionHandler: function (evtType, handler) {\r\n                return instance.root_.addEventListener(evtType, handler, applyPassive());\r\n            },\r\n            registerResizeHandler: function (handler) { return window.addEventListener('resize', handler); },\r\n            removeClass: function (className) { return instance.root_.classList.remove(className); },\r\n            updateCssVariable: function (varName, value) { return instance.root_.style.setProperty(varName, value); },\r\n        };\r\n    };\r\n    Object.defineProperty(MDCRipple.prototype, \"unbounded\", {\r\n        get: function () {\r\n            return Boolean(this.unbounded_);\r\n        },\r\n        set: function (unbounded) {\r\n            this.unbounded_ = Boolean(unbounded);\r\n            this.setUnbounded_();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MDCRipple.prototype.activate = function () {\r\n        this.foundation_.activate();\r\n    };\r\n    MDCRipple.prototype.deactivate = function () {\r\n        this.foundation_.deactivate();\r\n    };\r\n    MDCRipple.prototype.layout = function () {\r\n        this.foundation_.layout();\r\n    };\r\n    MDCRipple.prototype.getDefaultFoundation = function () {\r\n        return new MDCRippleFoundation(MDCRipple.createAdapter(this));\r\n    };\r\n    MDCRipple.prototype.initialSyncWithDOM = function () {\r\n        var root = this.root_;\r\n        this.unbounded = 'mdcRippleIsUnbounded' in root.dataset;\r\n    };\r\n    /**\r\n     * Closure Compiler throws an access control error when directly accessing a\r\n     * protected or private property inside a getter/setter, like unbounded above.\r\n     * By accessing the protected property inside a method, we solve that problem.\r\n     * That's why this function exists.\r\n     */\r\n    MDCRipple.prototype.setUnbounded_ = function () {\r\n        this.foundation_.setUnbounded(Boolean(this.unbounded_));\r\n    };\r\n    return MDCRipple;\r\n}(MDCComponent));\r\nexport { MDCRipple };\r\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}