{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { MDCModalDrawerFoundation, MDCDismissibleDrawerFoundation } from '@material/drawer';\nimport { useFoundation, focusTrapFactory, triggerWindowResize } from '@rmwc/base';\nimport { useRef, useEffect, useCallback } from 'react';\n\nvar useDrawerFoundationFactory = function (MDCConstructor) {\n  return function useDrawerFoundation(props) {\n    var focusTrapRef = useRef();\n\n    var _a = useFoundation({\n      props: props,\n      elements: {\n        rootEl: true,\n        scrimEl: true\n      },\n      foundation: function (_a) {\n        var rootEl = _a.rootEl,\n            emit = _a.emit,\n            getProps = _a.getProps;\n        var previousFocusEl;\n        var f = new MDCConstructor({\n          addClass: function (className) {\n            return rootEl.addClass(className);\n          },\n          removeClass: function (className) {\n            return rootEl.removeClass(className);\n          },\n          hasClass: function (className) {\n            return rootEl.hasClass(className);\n          },\n          elementHasClass: function (element, className) {\n            return element.classList.contains(className);\n          },\n          saveFocus: function () {\n            previousFocusEl = document.activeElement;\n          },\n          restoreFocus: function () {\n            if (rootEl.ref && rootEl.ref.contains(document.activeElement) && previousFocusEl) {\n              previousFocusEl.focus();\n            }\n          },\n          focusActiveNavigationItem: function () {\n            var _a;\n\n            var activeNavItemEl = (_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.querySelector(\".mdc-list-item--activated\");\n\n            if (activeNavItemEl) {\n              activeNavItemEl.focus();\n            }\n          },\n          notifyClose: function () {//emit('onClose', {}, true /* shouldBubble */);\n          },\n          notifyOpen: function () {\n            emit('onOpen', {}, true\n            /* shouldBubble */\n            );\n          },\n          trapFocus: function () {\n            var _a;\n\n            try {\n              (_a = focusTrapRef.current) === null || _a === void 0 ? void 0 : _a.trapFocus();\n            } catch (err) {}\n          },\n          releaseFocus: function () {\n            var _a;\n\n            try {\n              (_a = focusTrapRef.current) === null || _a === void 0 ? void 0 : _a.releaseFocus();\n            } catch (err) {}\n          }\n        }); // Fixes a very annoying issue where the menu isn't stateful\n        // this allows us to keep the menu open based on its controlled prop.\n\n        var existingClose = f.close.bind(f);\n\n        var newClose = function () {\n          emit('onClose', {});\n          setTimeout(function () {\n            if (!getProps().open) {\n              existingClose();\n            }\n          });\n        };\n\n        f.close = newClose;\n        return f;\n      }\n    }),\n        foundation = _a.foundation,\n        elements = __rest(_a, [\"foundation\"]);\n\n    var rootEl = elements.rootEl,\n        scrimEl = elements.scrimEl;\n    useEffect(function () {\n      if (rootEl.ref) {\n        focusTrapRef.current = focusTrapFactory(rootEl.ref);\n      }\n    }, [rootEl.ref]);\n    useEffect(function () {\n      props.open ? foundation.open() : foundation.close();\n    }, [props.open, foundation]);\n    var handleScrimClick = useCallback(function () {\n      var _a, _b;\n\n      (_b = (_a = foundation).handleScrimClick) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }, [foundation]);\n    var handleKeyDown = useCallback(function (evt) {\n      var _a;\n\n      (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n      foundation.handleKeydown(evt);\n    }, [foundation, props.onKeyDown]);\n    var handleTransitionEnd = useCallback(function (evt) {\n      var _a;\n\n      (_a = props.onTransitionEnd) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n      foundation.handleTransitionEnd(evt);\n      triggerWindowResize();\n    }, [foundation, props.onTransitionEnd]);\n    rootEl.setProp('onKeyDown', handleKeyDown, true);\n    rootEl.setProp('onTransitionEnd', handleTransitionEnd, true);\n    scrimEl.setProp('onClick', handleScrimClick, true);\n    return __assign({\n      foundation: foundation\n    }, elements);\n  };\n};\n\nexport var useDismissableDrawerFoundation = useDrawerFoundationFactory(MDCDismissibleDrawerFoundation);\nexport var useModalDrawerFoundation = useDrawerFoundationFactory(MDCModalDrawerFoundation);","map":{"version":3,"sources":["C:/Users/Mateo/Desktop/2Semestre2021/Dic-Bases2/Clase/dbprouno/Plataforma/FrontEnd/node_modules/@rmwc/drawer/next/foundation.js"],"names":["__assign","__rest","MDCModalDrawerFoundation","MDCDismissibleDrawerFoundation","useFoundation","focusTrapFactory","triggerWindowResize","useRef","useEffect","useCallback","useDrawerFoundationFactory","MDCConstructor","useDrawerFoundation","props","focusTrapRef","_a","elements","rootEl","scrimEl","foundation","emit","getProps","previousFocusEl","f","addClass","className","removeClass","hasClass","elementHasClass","element","classList","contains","saveFocus","document","activeElement","restoreFocus","ref","focus","focusActiveNavigationItem","activeNavItemEl","querySelector","notifyClose","notifyOpen","trapFocus","current","err","releaseFocus","existingClose","close","bind","newClose","setTimeout","open","handleScrimClick","_b","call","handleKeyDown","evt","onKeyDown","handleKeydown","handleTransitionEnd","onTransitionEnd","setProp","useDismissableDrawerFoundation","useModalDrawerFoundation"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,wBAAT,EAAmCC,8BAAnC,QAAyE,kBAAzE;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,mBAA1C,QAAqE,YAArE;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA+C,OAA/C;;AACA,IAAIC,0BAA0B,GAAG,UAAUC,cAAV,EAA0B;AACvD,SAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AACvC,QAAIC,YAAY,GAAGP,MAAM,EAAzB;;AACA,QAAIQ,EAAE,GAAGX,aAAa,CAAC;AACnBS,MAAAA,KAAK,EAAEA,KADY;AAEnBG,MAAAA,QAAQ,EAAE;AACNC,QAAAA,MAAM,EAAE,IADF;AAENC,QAAAA,OAAO,EAAE;AAFH,OAFS;AAMnBC,MAAAA,UAAU,EAAE,UAAUJ,EAAV,EAAc;AACtB,YAAIE,MAAM,GAAGF,EAAE,CAACE,MAAhB;AAAA,YAAwBG,IAAI,GAAGL,EAAE,CAACK,IAAlC;AAAA,YAAwCC,QAAQ,GAAGN,EAAE,CAACM,QAAtD;AACA,YAAIC,eAAJ;AACA,YAAIC,CAAC,GAAG,IAAIZ,cAAJ,CAAmB;AACvBa,UAAAA,QAAQ,EAAE,UAAUC,SAAV,EAAqB;AAAE,mBAAOR,MAAM,CAACO,QAAP,CAAgBC,SAAhB,CAAP;AAAoC,WAD9C;AAEvBC,UAAAA,WAAW,EAAE,UAAUD,SAAV,EAAqB;AAAE,mBAAOR,MAAM,CAACS,WAAP,CAAmBD,SAAnB,CAAP;AAAuC,WAFpD;AAGvBE,UAAAA,QAAQ,EAAE,UAAUF,SAAV,EAAqB;AAAE,mBAAOR,MAAM,CAACU,QAAP,CAAgBF,SAAhB,CAAP;AAAoC,WAH9C;AAIvBG,UAAAA,eAAe,EAAE,UAAUC,OAAV,EAAmBJ,SAAnB,EAA8B;AAC3C,mBAAOI,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2BN,SAA3B,CAAP;AACH,WANsB;AAOvBO,UAAAA,SAAS,EAAE,YAAY;AACnBV,YAAAA,eAAe,GAAGW,QAAQ,CAACC,aAA3B;AACH,WATsB;AAUvBC,UAAAA,YAAY,EAAE,YAAY;AACtB,gBAAIlB,MAAM,CAACmB,GAAP,IACAnB,MAAM,CAACmB,GAAP,CAAWL,QAAX,CAAoBE,QAAQ,CAACC,aAA7B,CADA,IAEAZ,eAFJ,EAEqB;AACjBA,cAAAA,eAAe,CAACe,KAAhB;AACH;AACJ,WAhBsB;AAiBvBC,UAAAA,yBAAyB,EAAE,YAAY;AACnC,gBAAIvB,EAAJ;;AACA,gBAAIwB,eAAe,GAAG,CAACxB,EAAE,GAAGE,MAAM,CAACmB,GAAb,MAAsB,IAAtB,IAA8BrB,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACyB,aAAH,CAAiB,2BAAjB,CAA7E;;AACA,gBAAID,eAAJ,EAAqB;AACjBA,cAAAA,eAAe,CAACF,KAAhB;AACH;AACJ,WAvBsB;AAwBvBI,UAAAA,WAAW,EAAE,YAAY,CACrB;AACH,WA1BsB;AA2BvBC,UAAAA,UAAU,EAAE,YAAY;AACpBtB,YAAAA,IAAI,CAAC,QAAD,EAAW,EAAX,EAAe;AAAK;AAApB,aAAJ;AACH,WA7BsB;AA8BvBuB,UAAAA,SAAS,EAAE,YAAY;AACnB,gBAAI5B,EAAJ;;AACA,gBAAI;AACA,eAACA,EAAE,GAAGD,YAAY,CAAC8B,OAAnB,MAAgC,IAAhC,IAAwC7B,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAAC4B,SAAH,EAAjE;AACH,aAFD,CAGA,OAAOE,GAAP,EAAY,CAAG;AAClB,WApCsB;AAqCvBC,UAAAA,YAAY,EAAE,YAAY;AACtB,gBAAI/B,EAAJ;;AACA,gBAAI;AACA,eAACA,EAAE,GAAGD,YAAY,CAAC8B,OAAnB,MAAgC,IAAhC,IAAwC7B,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAAC+B,YAAH,EAAjE;AACH,aAFD,CAGA,OAAOD,GAAP,EAAY,CAAG;AAClB;AA3CsB,SAAnB,CAAR,CAHsB,CAgDtB;AACA;;AACA,YAAIE,aAAa,GAAGxB,CAAC,CAACyB,KAAF,CAAQC,IAAR,CAAa1B,CAAb,CAApB;;AACA,YAAI2B,QAAQ,GAAG,YAAY;AACvB9B,UAAAA,IAAI,CAAC,SAAD,EAAY,EAAZ,CAAJ;AACA+B,UAAAA,UAAU,CAAC,YAAY;AACnB,gBAAI,CAAC9B,QAAQ,GAAG+B,IAAhB,EAAsB;AAClBL,cAAAA,aAAa;AAChB;AACJ,WAJS,CAAV;AAKH,SAPD;;AAQAxB,QAAAA,CAAC,CAACyB,KAAF,GAAUE,QAAV;AACA,eAAO3B,CAAP;AACH;AAnEkB,KAAD,CAAtB;AAAA,QAoEIJ,UAAU,GAAGJ,EAAE,CAACI,UApEpB;AAAA,QAoEgCH,QAAQ,GAAGf,MAAM,CAACc,EAAD,EAAK,CAAC,YAAD,CAAL,CApEjD;;AAqEA,QAAIE,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AAAA,QAA8BC,OAAO,GAAGF,QAAQ,CAACE,OAAjD;AACAV,IAAAA,SAAS,CAAC,YAAY;AAClB,UAAIS,MAAM,CAACmB,GAAX,EAAgB;AACZtB,QAAAA,YAAY,CAAC8B,OAAb,GAAuBvC,gBAAgB,CAACY,MAAM,CAACmB,GAAR,CAAvC;AACH;AACJ,KAJQ,EAIN,CAACnB,MAAM,CAACmB,GAAR,CAJM,CAAT;AAKA5B,IAAAA,SAAS,CAAC,YAAY;AAClBK,MAAAA,KAAK,CAACuC,IAAN,GAAajC,UAAU,CAACiC,IAAX,EAAb,GAAiCjC,UAAU,CAAC6B,KAAX,EAAjC;AACH,KAFQ,EAEN,CAACnC,KAAK,CAACuC,IAAP,EAAajC,UAAb,CAFM,CAAT;AAGA,QAAIkC,gBAAgB,GAAG5C,WAAW,CAAC,YAAY;AAC3C,UAAIM,EAAJ,EAAQuC,EAAR;;AACA,OAACA,EAAE,GAAG,CAACvC,EAAE,GAAGI,UAAN,EAAkBkC,gBAAxB,MAA8C,IAA9C,IAAsDC,EAAE,KAAK,KAAK,CAAlE,GAAsE,KAAK,CAA3E,GAA+EA,EAAE,CAACC,IAAH,CAAQxC,EAAR,CAA/E;AACH,KAHiC,EAG/B,CAACI,UAAD,CAH+B,CAAlC;AAIA,QAAIqC,aAAa,GAAG/C,WAAW,CAAC,UAAUgD,GAAV,EAAe;AAC3C,UAAI1C,EAAJ;;AACA,OAACA,EAAE,GAAGF,KAAK,CAAC6C,SAAZ,MAA2B,IAA3B,IAAmC3C,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACwC,IAAH,CAAQ1C,KAAR,EAAe4C,GAAf,CAA5D;AACAtC,MAAAA,UAAU,CAACwC,aAAX,CAAyBF,GAAzB;AACH,KAJ8B,EAI5B,CAACtC,UAAD,EAAaN,KAAK,CAAC6C,SAAnB,CAJ4B,CAA/B;AAKA,QAAIE,mBAAmB,GAAGnD,WAAW,CAAC,UAAUgD,GAAV,EAAe;AACjD,UAAI1C,EAAJ;;AACA,OAACA,EAAE,GAAGF,KAAK,CAACgD,eAAZ,MAAiC,IAAjC,IAAyC9C,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,EAAE,CAACwC,IAAH,CAAQ1C,KAAR,EAAe4C,GAAf,CAAlE;AACAtC,MAAAA,UAAU,CAACyC,mBAAX,CAA+BH,GAA/B;AACAnD,MAAAA,mBAAmB;AACtB,KALoC,EAKlC,CAACa,UAAD,EAAaN,KAAK,CAACgD,eAAnB,CALkC,CAArC;AAMA5C,IAAAA,MAAM,CAAC6C,OAAP,CAAe,WAAf,EAA4BN,aAA5B,EAA2C,IAA3C;AACAvC,IAAAA,MAAM,CAAC6C,OAAP,CAAe,iBAAf,EAAkCF,mBAAlC,EAAuD,IAAvD;AACA1C,IAAAA,OAAO,CAAC4C,OAAR,CAAgB,SAAhB,EAA2BT,gBAA3B,EAA6C,IAA7C;AACA,WAAOrD,QAAQ,CAAC;AAAEmB,MAAAA,UAAU,EAAEA;AAAd,KAAD,EAA6BH,QAA7B,CAAf;AACH,GAnGD;AAoGH,CArGD;;AAsGA,OAAO,IAAI+C,8BAA8B,GAAGrD,0BAA0B,CAACP,8BAAD,CAA/D;AACP,OAAO,IAAI6D,wBAAwB,GAAGtD,0BAA0B,CAACR,wBAAD,CAAzD","sourcesContent":["import { __assign, __rest } from \"tslib\";\r\nimport { MDCModalDrawerFoundation, MDCDismissibleDrawerFoundation } from '@material/drawer';\r\nimport { useFoundation, focusTrapFactory, triggerWindowResize } from '@rmwc/base';\r\nimport { useRef, useEffect, useCallback } from 'react';\r\nvar useDrawerFoundationFactory = function (MDCConstructor) {\r\n    return function useDrawerFoundation(props) {\r\n        var focusTrapRef = useRef();\r\n        var _a = useFoundation({\r\n            props: props,\r\n            elements: {\r\n                rootEl: true,\r\n                scrimEl: true\r\n            },\r\n            foundation: function (_a) {\r\n                var rootEl = _a.rootEl, emit = _a.emit, getProps = _a.getProps;\r\n                var previousFocusEl;\r\n                var f = new MDCConstructor({\r\n                    addClass: function (className) { return rootEl.addClass(className); },\r\n                    removeClass: function (className) { return rootEl.removeClass(className); },\r\n                    hasClass: function (className) { return rootEl.hasClass(className); },\r\n                    elementHasClass: function (element, className) {\r\n                        return element.classList.contains(className);\r\n                    },\r\n                    saveFocus: function () {\r\n                        previousFocusEl = document.activeElement;\r\n                    },\r\n                    restoreFocus: function () {\r\n                        if (rootEl.ref &&\r\n                            rootEl.ref.contains(document.activeElement) &&\r\n                            previousFocusEl) {\r\n                            previousFocusEl.focus();\r\n                        }\r\n                    },\r\n                    focusActiveNavigationItem: function () {\r\n                        var _a;\r\n                        var activeNavItemEl = (_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.querySelector(\".mdc-list-item--activated\");\r\n                        if (activeNavItemEl) {\r\n                            activeNavItemEl.focus();\r\n                        }\r\n                    },\r\n                    notifyClose: function () {\r\n                        //emit('onClose', {}, true /* shouldBubble */);\r\n                    },\r\n                    notifyOpen: function () {\r\n                        emit('onOpen', {}, true /* shouldBubble */);\r\n                    },\r\n                    trapFocus: function () {\r\n                        var _a;\r\n                        try {\r\n                            (_a = focusTrapRef.current) === null || _a === void 0 ? void 0 : _a.trapFocus();\r\n                        }\r\n                        catch (err) { }\r\n                    },\r\n                    releaseFocus: function () {\r\n                        var _a;\r\n                        try {\r\n                            (_a = focusTrapRef.current) === null || _a === void 0 ? void 0 : _a.releaseFocus();\r\n                        }\r\n                        catch (err) { }\r\n                    }\r\n                });\r\n                // Fixes a very annoying issue where the menu isn't stateful\r\n                // this allows us to keep the menu open based on its controlled prop.\r\n                var existingClose = f.close.bind(f);\r\n                var newClose = function () {\r\n                    emit('onClose', {});\r\n                    setTimeout(function () {\r\n                        if (!getProps().open) {\r\n                            existingClose();\r\n                        }\r\n                    });\r\n                };\r\n                f.close = newClose;\r\n                return f;\r\n            }\r\n        }), foundation = _a.foundation, elements = __rest(_a, [\"foundation\"]);\r\n        var rootEl = elements.rootEl, scrimEl = elements.scrimEl;\r\n        useEffect(function () {\r\n            if (rootEl.ref) {\r\n                focusTrapRef.current = focusTrapFactory(rootEl.ref);\r\n            }\r\n        }, [rootEl.ref]);\r\n        useEffect(function () {\r\n            props.open ? foundation.open() : foundation.close();\r\n        }, [props.open, foundation]);\r\n        var handleScrimClick = useCallback(function () {\r\n            var _a, _b;\r\n            (_b = (_a = foundation).handleScrimClick) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n        }, [foundation]);\r\n        var handleKeyDown = useCallback(function (evt) {\r\n            var _a;\r\n            (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, evt);\r\n            foundation.handleKeydown(evt);\r\n        }, [foundation, props.onKeyDown]);\r\n        var handleTransitionEnd = useCallback(function (evt) {\r\n            var _a;\r\n            (_a = props.onTransitionEnd) === null || _a === void 0 ? void 0 : _a.call(props, evt);\r\n            foundation.handleTransitionEnd(evt);\r\n            triggerWindowResize();\r\n        }, [foundation, props.onTransitionEnd]);\r\n        rootEl.setProp('onKeyDown', handleKeyDown, true);\r\n        rootEl.setProp('onTransitionEnd', handleTransitionEnd, true);\r\n        scrimEl.setProp('onClick', handleScrimClick, true);\r\n        return __assign({ foundation: foundation }, elements);\r\n    };\r\n};\r\nexport var useDismissableDrawerFoundation = useDrawerFoundationFactory(MDCDismissibleDrawerFoundation);\r\nexport var useModalDrawerFoundation = useDrawerFoundationFactory(MDCModalDrawerFoundation);\r\n"]},"metadata":{},"sourceType":"module"}