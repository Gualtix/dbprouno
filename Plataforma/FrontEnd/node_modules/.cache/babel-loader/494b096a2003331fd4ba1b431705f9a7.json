{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\n\n/**\r\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\r\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\r\n */\nexport function closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  var el = element;\n\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n\n    el = el.parentElement;\n  }\n\n  return null;\n}\nexport function matches(element, selector) {\n  var nativeMatches = element.matches || element.webkitMatchesSelector || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n/**\r\n * Used to compute the estimated scroll width of elements. When an element is\r\n * hidden due to display: none; being applied to a parent element, the width is\r\n * returned as 0. However, the element will have a true width once no longer\r\n * inside a display: none context. This method computes an estimated width when\r\n * the element is hidden or returns the true width when the element is visble.\r\n * @param {Element} element the element whose width to estimate\r\n */\n\nexport function estimateScrollWidth(element) {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  var htmlEl = element;\n\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n\n  var clone = htmlEl.cloneNode(true);\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  var scrollWidth = clone.scrollWidth;\n  document.documentElement.removeChild(clone);\n  return scrollWidth;\n}","map":{"version":3,"sources":["ponyfill.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAEH;;;AAGG;AAEH,OAAM,SAAU,OAAV,CAAkB,OAAlB,EAAoC,QAApC,EAAoD;AACxD,MAAI,OAAO,CAAC,OAAZ,EAAqB;AACnB,WAAO,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAP;AACD;;AAED,MAAI,EAAE,GAAmB,OAAzB;;AACA,SAAO,EAAP,EAAW;AACT,QAAI,OAAO,CAAC,EAAD,EAAK,QAAL,CAAX,EAA2B;AACzB,aAAO,EAAP;AACD;;AACD,IAAA,EAAE,GAAG,EAAE,CAAC,aAAR;AACD;;AACD,SAAO,IAAP;AACD;AAED,OAAM,SAAU,OAAV,CAAkB,OAAlB,EAAoC,QAApC,EAAoD;AACxD,MAAM,aAAa,GAAG,OAAO,CAAC,OAAR,IACf,OAAO,CAAC,qBADO,IAEf,OAAO,CAAC,iBAFf;AAGA,SAAO,aAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,QAA5B,CAAP;AACD;AAED;;;;;;;AAOG;;AACH,OAAM,SAAU,mBAAV,CAA8B,OAA9B,EAA8C;AAClD;AACA;AACA;AACA;AACA,MAAM,MAAM,GAAG,OAAf;;AACA,MAAI,MAAM,CAAC,YAAP,KAAwB,IAA5B,EAAkC;AAChC,WAAO,MAAM,CAAC,WAAd;AACD;;AAED,MAAM,KAAK,GAAG,MAAM,CAAC,SAAP,CAAiB,IAAjB,CAAd;AACA,EAAA,KAAK,CAAC,KAAN,CAAY,WAAZ,CAAwB,UAAxB,EAAoC,UAApC;AACA,EAAA,KAAK,CAAC,KAAN,CAAY,WAAZ,CAAwB,WAAxB,EAAqC,6BAArC;AACA,EAAA,QAAQ,CAAC,eAAT,CAAyB,WAAzB,CAAqC,KAArC;AACA,MAAM,WAAW,GAAG,KAAK,CAAC,WAA1B;AACA,EAAA,QAAQ,CAAC,eAAT,CAAyB,WAAzB,CAAqC,KAArC;AACA,SAAO,WAAP;AACD","sourceRoot":"","sourcesContent":["/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\r\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\r\n */\r\nexport function closest(element, selector) {\r\n    if (element.closest) {\r\n        return element.closest(selector);\r\n    }\r\n    var el = element;\r\n    while (el) {\r\n        if (matches(el, selector)) {\r\n            return el;\r\n        }\r\n        el = el.parentElement;\r\n    }\r\n    return null;\r\n}\r\nexport function matches(element, selector) {\r\n    var nativeMatches = element.matches\r\n        || element.webkitMatchesSelector\r\n        || element.msMatchesSelector;\r\n    return nativeMatches.call(element, selector);\r\n}\r\n/**\r\n * Used to compute the estimated scroll width of elements. When an element is\r\n * hidden due to display: none; being applied to a parent element, the width is\r\n * returned as 0. However, the element will have a true width once no longer\r\n * inside a display: none context. This method computes an estimated width when\r\n * the element is hidden or returns the true width when the element is visble.\r\n * @param {Element} element the element whose width to estimate\r\n */\r\nexport function estimateScrollWidth(element) {\r\n    // Check the offsetParent. If the element inherits display: none from any\r\n    // parent, the offsetParent property will be null (see\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\r\n    // This check ensures we only clone the node when necessary.\r\n    var htmlEl = element;\r\n    if (htmlEl.offsetParent !== null) {\r\n        return htmlEl.scrollWidth;\r\n    }\r\n    var clone = htmlEl.cloneNode(true);\r\n    clone.style.setProperty('position', 'absolute');\r\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\r\n    document.documentElement.appendChild(clone);\r\n    var scrollWidth = clone.scrollWidth;\r\n    document.documentElement.removeChild(clone);\r\n    return scrollWidth;\r\n}\r\n//# sourceMappingURL=ponyfill.js.map"]},"metadata":{},"sourceType":"module"}