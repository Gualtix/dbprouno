{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mateo\\\\Desktop\\\\2Semestre2021\\\\Dic-Bases2\\\\Clase\\\\dbprouno\\\\Plataforma\\\\FrontEnd\\\\src\\\\Components\\\\Grafica\\\\Grafica.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport { Form, FormGroup } from \"reactstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { toast } from \"react-toastify\";\nimport \"date-fns\";\nimport \"@rmwc/typography/styles\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport MultAxis from '../MultAxis';\nimport axios from \"axios\"; //var array = [];\n//4997680000\t4806250000\t191427000\t2020-11-30 00:00:00\n\n/*\r\nvar array = [\r\n    createData('banco1', 1, new Date('2020-11-30 00:00:00')),\r\n    createData('banco1', 2, new Date('2020-12-31 00:00:00')),\r\n    createData('banco1', 1, new Date('2021-01-31 00:00:00')),\r\n    createData('banco1', 1, new Date('2020-02-28 00:00:00')),\r\n    createData('banco2', 2, new Date('2020-11-30 00:00:00')),\r\n    createData('banco2', 4, new Date('2020-12-31 00:00:00')),\r\n    createData('banco2', 2, new Date('2021-01-31 00:00:00')),\r\n    createData('banco2', 3, new Date('2020-02-28 00:00:00')),\r\n    createData('banco3', 3, new Date('2020-11-30 00:00:00')),\r\n    createData('banco3', 3, new Date('2020-12-31 00:00:00')),\r\n    createData('banco3', 2, new Date('2021-01-31 00:00:00')),\r\n    createData('banco3', 2, new Date('2020-02-28 00:00:00')),\r\n  ];*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar array = [createData('banco1', 1, '2020-11-30 00:00:00'), createData('banco1', 2, '2020-12-31 00:00:00'), createData('banco1', 1, '2021-01-31 00:00:00'), createData('banco1', 1, '2020-02-28 00:00:00'), createData('banco2', 2, '2020-11-30 00:00:00'), createData('banco2', 4, '2020-12-31 00:00:00'), createData('banco2', 2, '2021-01-31 00:00:00'), createData('banco2', 3, '2020-02-28 00:00:00'), createData('banco3', 3, '2020-11-30 00:00:00'), createData('banco3', 3, '2020-12-31 00:00:00'), createData('banco3', 2, '2021-01-31 00:00:00'), createData('banco3', 2, '2020-02-28 00:00:00')];\nvar bancos = ['banco1', 'banco2', 'banco3'];\nvar data = [];\nvar cadena = \"\";\nvar fechas = [];\n\nfunction createData(banco, ranking, fecha) {\n  return {\n    banco,\n    ranking,\n    fecha\n  };\n}\n\nconst Grafica = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Nota: es importante manejar errores aquÃ­ y no en \n    // un bloque catch() para que no interceptemos errores\n    // de errores reales en los componentes.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(console.log('aquiiii'), console.log(items.results), console.log('finn')), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Grafica Ranking de Bancos AQUI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), \"datos\", array.map((el, index) => {\n      fechas = new Date(el.fecha);\n      array.map((e, index) => e.banco === el.banco ? cadena = e.fecha + cadena : \"\");\n      /*array.filter(bank => bank.banco === el.banco).map(cadato => (\r\n          <>\r\n              {cadena = cadato.banco + cadena + <br/>}\r\n          </>\r\n      ))*/\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"inicio \" + el.fecha + el.banco + ' ** ' + fechas.getFullYear() + \" ** \" + fechas.getMonth(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), \"banco\" + cadena, cadena = \"\"]\n      }, void 0, true) //el.banco,  el.fecha.getFullYear() +el.fecha.getMonth()+el.fecha.getDate()\n      ;\n    }), /*#__PURE__*/_jsxDEV(MultAxis, {\n      arreglo: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Grafica, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Grafica;\nexport default _c2 = withRouter(Grafica);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Grafica\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Mateo/Desktop/2Semestre2021/Dic-Bases2/Clase/dbprouno/Plataforma/FrontEnd/src/Components/Grafica/Grafica.js"],"names":["React","useEffect","useState","useRef","withRouter","Box","Card","Form","FormGroup","TextField","toast","MultAxis","axios","array","createData","bancos","data","cadena","fechas","banco","ranking","fecha","Grafica","history","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","console","log","results","map","el","index","Date","e","getFullYear","getMonth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Form, FormGroup } from \"reactstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"date-fns\";\r\nimport \"@rmwc/typography/styles\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport MultAxis from '../MultAxis';\r\nimport axios from \"axios\";\r\n\r\n\r\n//var array = [];\r\n//4997680000\t4806250000\t191427000\t2020-11-30 00:00:00\r\n/*\r\nvar array = [\r\n    createData('banco1', 1, new Date('2020-11-30 00:00:00')),\r\n    createData('banco1', 2, new Date('2020-12-31 00:00:00')),\r\n    createData('banco1', 1, new Date('2021-01-31 00:00:00')),\r\n    createData('banco1', 1, new Date('2020-02-28 00:00:00')),\r\n    createData('banco2', 2, new Date('2020-11-30 00:00:00')),\r\n    createData('banco2', 4, new Date('2020-12-31 00:00:00')),\r\n    createData('banco2', 2, new Date('2021-01-31 00:00:00')),\r\n    createData('banco2', 3, new Date('2020-02-28 00:00:00')),\r\n    createData('banco3', 3, new Date('2020-11-30 00:00:00')),\r\n    createData('banco3', 3, new Date('2020-12-31 00:00:00')),\r\n    createData('banco3', 2, new Date('2021-01-31 00:00:00')),\r\n    createData('banco3', 2, new Date('2020-02-28 00:00:00')),\r\n  ];*/\r\n\r\n  var array = [\r\n    createData('banco1', 1, ('2020-11-30 00:00:00')),\r\n    createData('banco1', 2, ('2020-12-31 00:00:00')),\r\n    createData('banco1', 1, ('2021-01-31 00:00:00')),\r\n    createData('banco1', 1, ('2020-02-28 00:00:00')),\r\n    createData('banco2', 2, ('2020-11-30 00:00:00')),\r\n    createData('banco2', 4, ('2020-12-31 00:00:00')),\r\n    createData('banco2', 2, ('2021-01-31 00:00:00')),\r\n    createData('banco2', 3, ('2020-02-28 00:00:00')),\r\n    createData('banco3', 3, ('2020-11-30 00:00:00')),\r\n    createData('banco3', 3, ('2020-12-31 00:00:00')),\r\n    createData('banco3', 2, ('2021-01-31 00:00:00')),\r\n    createData('banco3', 2, ('2020-02-28 00:00:00')),\r\n  ];\r\n\r\n  var bancos =[\r\n      'banco1','banco2','banco3'\r\n  ]\r\n  var data=[];\r\n  var cadena = \"\";\r\n  var fechas = [];\r\n\r\n\r\n  function createData(banco, ranking, fecha) {\r\n    return { banco, ranking, fecha };\r\n  }\r\n  \r\n\r\n\r\n\r\nconst Grafica = ({history}) => {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n  \r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n      fetch(\"https://randomuser.me/api/\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            setIsLoaded(true);\r\n            setItems(result);\r\n          },\r\n          // Nota: es importante manejar errores aquÃ­ y no en \r\n          // un bloque catch() para que no interceptemos errores\r\n          // de errores reales en los componentes.\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n        {console.log('aquiiii'),console.log(items.results),console.log('finn')}\r\n        <center>\r\n            <label>Grafica Ranking de Bancos AQUI</label>\r\n            \r\n        </center>\r\n        datos\r\n        {/*\r\n\t\t\t\t{\ttype: \"line\",\r\n\t\t\t\t\tname: \"2016\",\r\n\t\t\t\t\tshowInLegend: true,\r\n\t\t\t\t\tdataPoints: [\r\n\t\t\t\t\t\t{ y: 155, label: \"Jan\" },\r\n\t\t\t\t\t\t{ y: 150, label: \"Feb\" },\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n                \r\n            */\r\n        }\r\n        \r\n\r\n\r\n        {\r\n\r\n            array.map((el,index)=>{\r\n                fechas = new Date(el.fecha)\r\n                array.map((e,index)=>(\r\n                    e.banco === el.banco ? (\r\n                        cadena = e.fecha + cadena\r\n                    ):\"\"\r\n                ))\r\n                /*array.filter(bank => bank.banco === el.banco).map(cadato => (\r\n                    <>\r\n                        {cadena = cadato.banco + cadena + <br/>}\r\n                    </>\r\n                ))*/\r\n                \r\n\r\n                return(\r\n                    <>\r\n                    {\"inicio \" + el.fecha + el.banco +' ** '+ fechas.getFullYear() + \" ** \" + fechas.getMonth()}\r\n                    <br/>\r\n                    {\"banco\" + cadena}\r\n                    {cadena = \"\"}\r\n                    </>\r\n                    //el.banco,  el.fecha.getFullYear() +el.fecha.getMonth()+el.fecha.getDate()\r\n                )\r\n            })\r\n        }\r\n        <MultAxis arreglo = {data} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(Grafica);"]},"metadata":{},"sourceType":"module"}